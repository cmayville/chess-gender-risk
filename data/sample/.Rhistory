read.csv("prog_var.csv")
vars <- read.csv("prog_var.csv")
vars
percent_change = c("2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15")
percent_change <- c("2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15")
percent_change
percent_change <- datat.frame(vars
)
vars
vars["v1"]
vars["v2"]
vars["v3"]
vars["v2"]
vars[2]
vars[3]
vars["v2"]
length(vars)
for i in length(vars) {
for (x in 3:16) {
p_change <- data.frame()
p_change
for (x in 3:16) {
p_change[toString(x - 1)] <- (vars[x] - vars[x - 1] / vars[x - 1])
}
warnings()
p_change
p_change = data.frame(matris(nrow = 100))
p_change = data.frame(matrix(nrow = 100))
p_change
for (x in 3:16) {
p_change[toString(x - 1)] <- (vars[x] - vars[x - 1] / vars[x - 1])
}
p_change
for (x in 3:16) {
p_change[toString(x - 1)] <- ((vars[x] - vars[x - 1]) / vars[x - 1])
}
p_change
for (x in p_change) {
x[101] <- avg(x)
}
for (x in p_change) {
avgs <- mean(x)
}
p_change
avgs = data.frame()
for (x in p_change) {
for (x in 3:15) {
avgs[x] <- mean(p_change[toString(x)])
}
avgs
avgs[x - 2] <- mean(p_change[toString(x)])
colMeans(p_change)
colMeans(p_change[sapply(p_change, is.numeric)])
colMeans(p_change, na.rm=TRUE)
plot(colMeans(p_change, na.rm=TRUE))
plot(log(colMeans(p_change, na.rm=TRUE)))
for (x in 3:50) {
p_change[toString(x - 1)] <- ((vars[x] - vars[x - 1]) / vars[x - 1])
}
plot(log(colMeans(p_change, na.rm=TRUE)))
plot(log(colMeans(p_change, na.rm=TRUE)), xlab="Number of Games", ylab="log(Percent Change in Variance)")
png("var_with_games.png")
plot(log(colMeans(p_change, na.rm=TRUE)), xlab="Number of Games", ylab="log(Percent Change in Variance)")
dev.off()
w.plot
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
plot(log(colMeans(p_change, na.rm=TRUE)), xlab="Number of Games", ylab="log(Percent Change in Variance)")
wieghted = data.fram(matrix(ncol = 3))
wieghted = data.frame(matrix(ncol = 3))
wieghted
wieghted[1] <- log(colMeans(p_change, na.rm=True))
wieghted[1] <- log(colMeans(p_change, na.rm=TRUE))
wieghted[2] <- log(colMeans(p_change, na.rm=TRUE))
wieghted
wieghted = data.frame(log(colMeans(p_change, na.rm=TRUE)))
weight
weighted
wieghted
wieghted[2] = 
wieghted = data.frame(log(colMeans(p_change, na.rm=TRUE), colSums(!is.na(p_change))))
wieghted
ggplot(wieghted, aes(y = wieghted[1], size = wieghted[2])) + geom_point()
wieghted = data.frame(log(colMeans(p_change, na.rm=TRUE), colSums(!is.na(p_change))))
log_p <- log(colMeans(p_change, na.rm=TRUE))
count <- colSums(!is.na(p_change))
wieghted = data.frame(log_p, count)
wieghted
ggplot(wieghted, aes(y=log_p, size=count))
ggplot(wieghted, aes(y=log_p, size=count)) + geompoint()
ggplot(wieghted, aes(y=log_p, size=count)) + geom_point()
wieghted$count = {2..50}
{2..50}
wieghted$num <- 2:50
wieghted
ggplot(wieghted, aes(x=num, y=log_p, size=count)) + geom_point()
f <-ggplot(wieghted, aes(x=num, y=log_p, size=count)) + geom_point()
f
dev.off()
f
q()
